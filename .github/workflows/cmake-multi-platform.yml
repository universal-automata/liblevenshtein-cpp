# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all
      # matrix combinations. Consider changing this to true when your workflow
      # is stable.
      fail-fast: false

      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, macos-latest]
        build_type: [Debug, Release]
        include:
          - os: ubuntu-latest
          - os: macos-latest
          #- os: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          environment-file: environment.yml
          activate-environment: ll-cpp
          miniforge-version: latest
          use-mamba: true
          channels: conda-forge

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        shell: bash -el {0}
        run: >
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -B ${{ steps.strings.outputs.build-output-dir }}
          -S ${{ github.workspace }}

      - name: Build
        shell: bash -el {0}
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        shell: bash -el {0}
        working-directory: ${{ steps.strings.outputs.build-output-dir }}/test
        run: ./test-liblevenshtein
